name: CI-Tests
on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'Continuous_Integration/**'
      - 'Continuous_Deployment/**'
env:
  AWS_DEFAULT_REGION: 'eu-west-3'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install pipenv and dependencies
        working-directory: "Continuous_Integration/preparation"
        run:
          pip install pipenv && pipenv install --dev



      - name: Run tests with pipenv
        working-directory: "Continuous_Integration/preparation/integration_test"
        run:
          pipenv run pytest tests/

      - name: pylint
        working-directory: "Continuous_Integration/preparation"
        run:
          pipenv run pylint --recursive=y .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Integration Test
        working-directory: 'Continuous_Integration/preparation/integration_test'
        run: |
          . run.sh

  tf-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: hashicorp/setup-terraform@v2

      - name: TF plan
        id: plan
        working-directory: 'Continuous_Deployment/terraform'
        run: |
          terraform init -backend-config="key=mlops-test-stg.tfstate" --reconfigure && terraform plan --var-file vars/prod.tfvars
